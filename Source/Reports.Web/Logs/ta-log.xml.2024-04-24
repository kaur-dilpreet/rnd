<INFO > 
    <date>2024-04-24 14:24:48,860</date> 
    <thread>1</thread> 
    <logger>TA</logger><message>Data Worker Initialized</message>
</INFO >
<INFO > 
    <date>2024-04-24 14:55:26,269</date> 
    <thread>1</thread> 
    <logger>TA</logger><message>Data Worker Initialized</message>
</INFO >
<ERROR> 
    <date>2024-04-24 16:52:53,942</date> 
    <thread>9</thread> 
    <logger>TA</logger>
    <errorPath>/askbi/askquestion</errorPath>
    <rawUrl>/askbi/askquestion?Length=5</rawUrl>
    <className>DABLLTA.AskBIProvider</className>
    <methodName>AskQuestion</methodName>
    <params>
        <param name="userId"><![CDATA[1]]></param>
    </params>
    <message>Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[Reports.Core.Domain.Models.AskBIQuestionResponse]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'answer', line 1, position 10.</message>
    <source>Newtonsoft.Json</source>
    <targetSite>System.Object CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, System.Object)</targetSite>
    <stackTrace><![CDATA[
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at Reports.Core.Utilities.Utilities.Deserialize[T](String serializedString) in C:\Users\stepanar\OneDrive - Hewlett Packard Enterprise\Projects\Active Projects\Reports\Source\Reports.Core\Utilities\Utilities.cs:line 245
   at Reports.BLL.Providers.AskBIProvider.AskQuestion(Int64 userId, String question, Boolean displaySQL) in C:\Users\stepanar\OneDrive - Hewlett Packard Enterprise\Projects\Active Projects\Reports\Source\Reports.BLL\Providers\AskBIProvider.cs:line 91
    ]]></stackTrace>
</ERROR>
<ERROR> 
    <date>2024-04-24 16:53:47,559</date> 
    <thread>9</thread> 
    <logger>TA</logger>
    <errorPath>/askbi/askquestion</errorPath>
    <rawUrl>/askbi/askquestion?Length=5</rawUrl>
    <className>DABLLTA.AskBIProvider</className>
    <methodName>AskQuestion</methodName>
    <params>
        <param name="userId"><![CDATA[1]]></param>
    </params>
    <message>Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[Reports.Core.Domain.Models.AskBIQuestionResponse]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'answer', line 1, position 10.</message>
    <source>Newtonsoft.Json</source>
    <targetSite>System.Object CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, System.Object)</targetSite>
    <stackTrace><![CDATA[
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at Reports.Core.Utilities.Utilities.Deserialize[T](String serializedString) in C:\Users\stepanar\OneDrive - Hewlett Packard Enterprise\Projects\Active Projects\Reports\Source\Reports.Core\Utilities\Utilities.cs:line 245
   at Reports.BLL.Providers.AskBIProvider.AskQuestion(Int64 userId, String question, Boolean displaySQL) in C:\Users\stepanar\OneDrive - Hewlett Packard Enterprise\Projects\Active Projects\Reports\Source\Reports.BLL\Providers\AskBIProvider.cs:line 91
    ]]></stackTrace>
</ERROR>
